#+TITLE: README
#+AUTHOR: Adolfo Villafiorita
#+STARTUP: showall

* Introduction

LogSense generates reports and statistics from Apache web logs in the
=combined= format and from Rails logs.  Written in Ruby, it runs from
the command line, it is fast, and it can be installed on any system
which supports Ruby.

LogSense moves along the lines of tools such as [[https://goaccess.io/][GoAccess]]
and [[https://umami.is/][Umami]], focusing on privacy and data-ownership: the data
generated by LogSense is stored on your computer and owned by
you (like it should be).

LogSense is also inspired by static websites generators:
statistics are generated from the command line and accessed as static
HTML files.  By generating static resources, LogSense
significantly reduces the attack surface of your webserver and
installation headaches.

We have, for instance, a cron job running on our servers, generating
statistics at night.  The generated files are then made available on a
private area on the web.

Statistics are generated from Apache log formats in the =combined=
format and from Rails logs.  Reports are tailored, but not limited, to
web servers serving static websites.  No need to install Java Script
code on your websites, no cookies installed, no user tracking.

LogSense reports the following data:

- Visitors, hits, unique visitors, bandwidth used
- Most accessed HTML pages
- Most accessed resources  
- Response statuses
- Referers
- OS, browsers, and devices
- IP Country location, thanks to the DPIP lite country DB
- Streaks: resources accessed by a given IP over time
- Potential attacks: access to resources which are not meant to be
  served by a web server serving static websites
- Performance of Rails requests
 
Filters from the command line allow to analyze specific periods and
distinguish traffic generated by self polls and crawlers.

LogSense generates HTML, txt (Org Mode), and SQLite outputs.

* Installation

  #+begin_src bash
  gem install log_sense
  #+end_src

* Usage

  #+begin_src bash :results raw output :wrap example
  log_sense --help
  #+end_src

  #+RESULTS:
  #+begin_example
  Usage: apache_log_report [options] [logfile]
      -l, --limit=N                    Number of entries to show (defaults to 30)
      -b, --begin=DATE                 Consider entries after or on DATE
      -e, --end=DATE                   Consider entries before or on DATE
      -i, --ignore-crawlers            Ignore crawlers
      -p, --ignore-selfpoll            Ignore apaches self poll entries (from ::1)
          --only-crawlers              Perform analysis on crawlers only
      -u, --prefix=PREFIX              Prefix to add to all plots (used to run multiple analyses in the same dir)
      -w, --suffix=SUFFIX              Suffix to add to all plots (used to run multiple analyses in the same dir)
      -c, --code-export=WHAT           Control :export directive in Org Mode code blocks (code, results, *both*, none)
      -f, --format=FORMAT              Output format: html, org, sqlite. Defaults to org mode
      -v, --version                    Prints version information
      -h, --help                       Prints this help
  This is version 1.1.6
  #+end_example

* Change Log

See the [[file:CHANGELOG.org][CHANGELOG]] file.

* Compatibility

LogSense should run on any system on which Ruby runs.

Concerning the outputs:

- The HTML report uses [[https://picturepan2.github.io/spectre/][Spectre.css]] and (will use) [[https://vega.github.io/vega-lite/][Vega Light]], which
  are downloaded from a CDN
- The textual format is compatible with Org Mode and can be further
  processed to any format Org Mode can be exported to (including HTML
  and PDF),

* Author and Contributors

[[http://ict4g.net/adolfo][Adolfo Villafiorita]].

* Known Bugs

Some known bugs and an unknown number of unknown bugs.

(See the open issues for the known bugs.)

* License

Distributed under the terms of the [[http://opensource.org/licenses/MIT][MIT License]].

Geolocation is made possible by the DB-IP.com IP to City database, released under
a CC license.


